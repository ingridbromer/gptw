package com.gptw;

import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.List;

import org.junit.Test;
import org.junit.jupiter.api.BeforeEach;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.gptw.model.dto.EmployeeDTO;
import com.gptw.service.CSVReaderService;
import com.gptw.service.KafkaPublisherService;

public class CSVReaderServiceTest {

	@Mock
	private CSVReaderService csvReaderService;

	@Mock
	private KafkaPublisherService mockKafkaPublisherService;

	@InjectMocks
	private CSVReaderService csvReaderServiceUnderTest;

	@BeforeEach
	public void setUp() {
		MockitoAnnotations.openMocks(this); // Inicializa os mocks
		csvReaderServiceUnderTest = new CSVReaderService(mockKafkaPublisherService);
	}

	@Test
    public void testReadCSV() {
        // Suponha que o método readCSV retorne uma lista vazia para simplificar o teste
        List<EmployeeDTO> employees = List.of();

        // Mock do comportamento do método readCSV
        when(csvReaderService.readCSV(anyString())).thenReturn(employees);

        // Executa o método que queremos testar
        csvReaderServiceUnderTest.readCSV("arquivoTeste.csv");

        // Verifica se o método publish do KafkaPublisherService foi chamado para cada funcionário na lista
        for (EmployeeDTO employee : employees) {
            verify(mockKafkaPublisherService).publish(employee);
        }
    }
}
